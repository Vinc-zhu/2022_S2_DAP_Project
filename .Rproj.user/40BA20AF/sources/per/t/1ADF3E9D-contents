## Week 1 Video - R Basics 1
# installing packages
install.packages("gapminder")
library(gapminder)
data(gapminder)
gapminder
installed.packages()
# update.packages("gapminder")
# remove.packages("gapminder")

# managing your environment
ls()          # lists all the variables and functions stored in the global environment
a <- 2
rm(a)         # delete variable "a"
rm(list=ls()) # delete all the objects in your environment


# logical: comparing things
1==1
1!=2
1<1
1<=1
2>1
2>=1

# vectors  
# creating vectors
c(1, 2, 3)
seq(1, 3)
seq(1, 10, 2)
seq(0, 10, length.out=5)
rep(1,2)

# vector types
vector1 <- c(TRUE, FALSE, TRUE, TRUE, NA)
vector2 <- c(1,2.3,4,5,6.1)
vector3 <- c(1L,2L,3L,4L,5L,6L)
vector4 <- c("a","b","c")
vector5 <- factor(c("ab", "cd", "ef"))
vector6 <- as.ordered(factor(c("ab", "cd", "ef")))

class(vector1)
length(vector1)

# Vector coercion
x <- c(1, "Male", 3)

# R has functions to force a specific coercion
# • as.character() which turns elements of a vector all into characters
# • as.numeric() which turns elements of vectors all into numeric
# • as.factor() which turns elements of vectors all into factors

y <- as.numeric(x)
y
class(y) # -> numeric

# Sorting vectors
x<-c(32,5,13,91,64)
sort(x)  # returns a new vector that sorts the elements of the original vector in increasing order
order(x) # returns the index of the elements of the sorted vector compared to the original vector
rank(x)  # returns the index of the elements of the original vector compared to the sorted vector

max(x)
which.max(x) # gives us the index for which we get the largest element

min(x)
which.min(x)

x[2] #give the object in x that is second in order


# life expectancy entries for Australia
# 1)  logicals
Australia <- gapminder$country=="Australia"
gapminder$lifeExp[Australia]

Year <- gapminder$year==2007
index1<-Australia&Year
index1
gapminder$lifeExp[index1]

# 2) Using which
index2 <- which(gapminder$country=="Australia")
index2
gapminder$lifeExp[index2]

# 3) Using match
index4 <- match("Australia",gapminder$country)
index4
gapminder$lifeExp[index4]
# index4 is the index of the first entries where country is Australia.


# Check whether the entries is inside the vector
c("Australia", "US") %in% gapminder$country
c("Australia", "United States") %in% gapminder$country

# We can then combine %in% and which(), and this is a very powerful combination.
index5 <- which(gapminder$country%in%c("Australia","United States"))
index5
gapminder$lifeExp[index5]
# index5 is the index of the entries where country is Australia and US. 
# This is then used to find the life expectancies that match to this index.


# help
?hist


## Week 2 Video - R Basics 2
# Dataframes
Exam_mark <- data.frame(names = c("John", "Karen", "Bill", "Nancy"),
                        exam1 = c(85,67,56,77),
                        exam2 = c(79, 75, 60, 95) )
Exam_mark


head(gapminder)
gapminder2 <- data.frame(country = gapminder$country, 
                         life_exoectancy = gapminder$lifeExp)
head(gapminder2)


# Basic data wrangling
install.packages("dplyr")
library(dplyr)


# filter - to filter the data by subsetting rows
filter(gapminder, lifeExp < 30)

# select - to subset the columns
select(gapminder, country, year, lifeExp)

# mutate - to add new columns to the dataframe
mutate(gapminder, totalgdp = gdpPercap*pop)

# %>% (the pipe) - to perform a series of operations at once
gapminder %>% filter(lifeExp<30) %>% select(country,year,lifeExp)


# Creating graphs
plot(gapminder$gdpPercap, gapminder$lifeExp)

hist(gapminder$lifeExp)

boxplot(lifeExp~continent,data=gapminder)
boxplot(gapminder$lifeExp)

