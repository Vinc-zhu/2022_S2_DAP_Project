"0",""
"0",""
"0","dim(data_death_clean_fips)[1] == length(unique(data_death_clean_fips$fips_clean)) # No duplicates"
"1","[1]"
"1"," TRUE"
"1","
"
"0","dim(data_incidence_clean_fips)[1] == length(unique(data_incidence_clean_fips$fips_clean)) # No duplicates"
"1","[1]"
"1"," TRUE"
"1","
"
"0","dim(data_health_ins_clean_fips)[1] == length(unique(data_health_ins_clean_fips$fips_clean)) # No duplicates"
"1","[1]"
"1"," TRUE"
"1","
"
"0","dim(data_income_clean_fips)[1] == length(unique(data_income_clean_fips$fips_clean)) # No duplicates"
"1","[1]"
"1"," TRUE"
"1","
"
"0","dim(data_population_clean_fips)[1] == length(unique(data_population_clean_fips$fips_clean)) # No duplicates"
"1","[1]"
"1"," TRUE"
"1","
"
"0","dim(data_poverty_clean_fips)[1] == length(unique(data_poverty_clean_fips$fips_clean)) # No duplicates"
"1","[1]"
"1"," TRUE"
"1","
"
"0","# # Alternative 1"
"0","# data_death_clean_fips %>% summarise(n_distinct(fips_clean))"
"0","# "
"0","# # Alternative 2"
"0","# dup = duplicated(data_death_clean_fips$fips_clean) #returns logical vector"
"0","# data_death_clean_fips$fips_clean[dup] #to check any duplicates in key"
"0",""
