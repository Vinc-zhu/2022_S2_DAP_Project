knitr::opts_chunk$set(include = FALSE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) #to clean column names
library(psych)   #for the describe function
death <- read_csv(\Data\death.csv)
death <- read_csv(\Data\"death.csv")
death <- read_csv("\Data\death.csv")
death <- read_csv("Data\death.csv")
death <- read_csv("Data/death.csv")
head(death)
knitr::opts_chunk$set(include = FALSE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) #to clean column names
library(psych)   #for the describe function
knitr::opts_chunk$set(include = FALSE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) #to clean column names
library(psych)   #for the describe function
data_death            <- read_csv("Data/death.csv")
data_health_insurance <- read_csv("Data/healthinsurance.csv")
data_incidence        <- read_csv("Data/incidence.csv")
data_income           <- read_csv("Data/income.csv")
data_population       <- read_csv("Data/population.csv")
data_poverty          <- read_csv("Data/poverty.csv")
head(data_death)
head(data_health_insurance)
head(data_incidence)
head(data_income)
head(data_population)
head(data_poverty)
knitr::opts_chunk$set(echo = TRUE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) #to clean column names
library(psych)   #for the describe function
data_death            <- read_csv("Data/death.csv")
data_health_insurance <- read_csv("Data/healthinsurance.csv")
data_incidence        <- read_csv("Data/incidence.csv")
data_income           <- read_csv("Data/income.csv")
data_population       <- read_csv("Data/population.csv")
data_poverty          <- read_csv("Data/poverty.csv")
head(data_death)
head(data_health_insurance)
head(data_incidence)
head(data_income)
head(data_population)
head(data_poverty)
summary(data_poverty)
describr(data_poverty)
describe(data_poverty)
knitr::opts_chunk$set(echo = TRUE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) #to clean column names
library(psych)   #for the describe function
data_death            <- read_csv("Data/death.csv")
data_health_insurance <- read_csv("Data/healthinsurance.csv")
data_incidence        <- read_csv("Data/incidence.csv")
data_income           <- read_csv("Data/income.csv")
data_population       <- read_csv("Data/population.csv")
data_poverty          <- read_csv("Data/poverty.csv")
head(data_death)
head(data_health_insurance)
head(data_incidence)
head(data_income)
head(data_population)
head(data_poverty)
describe(data_poverty)
head(data_death)
str(data_death)
data_deathr_clean <- clean_names(data_death)
names(data_deathr_clean)
data_deathr_clean           <- clean_names(data_death)
data_health_insurance_clean <- clean_names(data_health_insurance)
data_incidence_clean        <- clean_names(data_incidence)
data_income_clean           <- clean_names(data_income)
data_population_clean       <- clean_names(data_population)
data_poverty_clean          <- clean_names(data_poverty)
names(data_deathr_clean)
names(data_health_insurance_clean)
names(data_incidence_clean)
names(data_income_clean)
names(data_population_clean)
names(data_poverty_cleanï¼‰
data_deathr_clean           <- clean_names(data_death)
data_health_insurance_clean <- clean_names(data_health_insurance)
data_incidence_clean        <- clean_names(data_incidence)
data_income_clean           <- clean_names(data_income)
data_population_clean       <- clean_names(data_population)
data_poverty_clean          <- clean_names(data_poverty)
names(data_deathr_clean)
names(data_health_insurance_clean)
names(data_incidence_clean)
names(data_income_clean)
names(data_population_clean)
names(data_poverty_clean)
names(data_deathr_clean)
names(data_health_insurance_clean)
names(data_incidence_clean)
names(data_income_clean)
names(data_population_clean)
names(data_poverty_clean)
table(data_deathr_clean)
data_deathr_clean
names(data_death_clean)
data_death_clean           <- clean_names(data_death)
names(data_death_clean)
table(data_death_clean)
table(data_death_clean)
dim(data_death_clean)
summary(data_death_clean)
describe(data_death_clean)
class(data_death_clean)
table(data_death_clean&county)
table(data_death_clean$county)
unique(data_death_clean$county)
nrow(unique(data_death_clean$county))
dim(unique(data_death_clean$county))
dim(unique(data_death_clean$county))
class(unique(data_death_clean$county))
unique(data_death_clean$county)
class(data_death_clean$county)
names(data_death_clean)
class(data_death_clean$fips)
unique(data_death_clean$fips)
nunique(data_death_clean$fips)
length(nunique(data_death_clean$fips))
length(unique(data_death_clean$fips))
dim(data_death)
length(unique(data_death_clean$fips)) # there is no duplicate FIPS
dim(data_death) = length(unique(data_death_clean$fips)) # there is no duplicate FIPS
dim(data_death)[0] = length(unique(data_death_clean$fips)) # there is no duplicate FIPS
dim(data_death)[0]
dim(data_death)
dim(data_death)[1]
dim(data_death)[1] = length(unique(data_death_clean$fips)) # there is no duplicate FIPS
class(dim(data_death)[1]) = length(unique(data_death_clean$fips)) # there is no duplicate FIPS
class(dim(data_death)[1])
= class(length(unique(data_death_clean$fips))) # there is no duplicate FIPS
class(length(unique(data_death_clean$fips))) # there is no duplicate FIPS
dim(data_death)[1]
length(unique(data_death_clean$fips)) # there is no duplicate FIPS
dim(data_death)[1]=length(unique(data_death_clean$fips)) # there is no duplicate FIPS
3=3
3==3
dim(data_death)[1]==length(unique(data_death_clean$fips)) # there is no duplicate FIPS
library("stringr")
str_pad("xxx", width = nchar("xxx") + 1, pad = "0")
str_pad(data_death_clean$fips, width = 5, pad = "0")
knitr::opts_chunk$set(echo = TRUE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) #to clean column names
library(psych)   #for the describe function
library("stringr")
data_death_clean_fips <- data_death_clean %>% mutate(fips_clean = str_pad(data_death_clean$fips, width = 5, pad = "0"))
data_death_clean_fips
view(data_death_clean_fips)
# Make FIPS a 5-digit code
# For death and incidence data, most of the FIPS codes are 5-digits but if they are 4-digits, you will need to add a 0 in front.
data_death_clean_fips <- data_death_clean %>% mutate(fips_clean = str_pad(data_death_clean$fips, width = 5, pad = "0"))
view(data_death_clean_fips)
For poverty, health insurance, income and population data, you will need to combine State FIPS and County FIPS to get the 5-digit code.
# Make FIPS a 5-digit code
# For death and incidence data, most of the FIPS codes are 5-digits but if they are 4-digits, you will need to add a 0 in front.
data_death_clean_fips <- data_death_clean %>% mutate(fips_clean = str_pad(data_death_clean$fips, width = 5, pad = "0"))
data_incidence_clean_fips <- data_incidence_clean %>% mutate(fips_clean = str_pad(data_incidence_clean$fips, width = 5, pad = "0"))
# view(data_death_clean_fips)
view(data_incidence_clean_fips)
# Check if there is duplicate FIPS
dim(data_death_clean)[1] == length(unique(data_death_clean$fips)) # No
dim(data_incidence_clean_fips)[1] == length(unique(data_incidence_clean_fips$fips)) # No
data_health_ins <- read_csv("Data/healthinsurance.csv")
data_health_ins_clean <- clean_names(data_health_ins)
names(data_health_ins_clean)
data_health_ins_clean
data_health_ins_clean_fips <- data_health_ins_clean %>%
mutate(state_fips_clean = str_pad(data_health_ins_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_health_ins_clean$state_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = state_fips_clean + county_fips_clean)
# For poverty, health insurance, income and population data, you will need to combine State FIPS and County FIPS to get the 5-digit code.
data_health_ins_clean_fips <- data_health_ins_clean %>%
mutate(state_fips_clean = str_pad(data_health_ins_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_health_ins_clean$state_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_health_ins_clean_fips
# For poverty, health insurance, income and population data, you will need to combine State FIPS and County FIPS to get the 5-digit code.
data_health_ins_clean_fips <- data_health_ins_clean %>%
mutate(state_fips_clean = str_pad(data_health_ins_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_health_ins_clean$county_fips_clean, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
# For poverty, health insurance, income and population data, you will need to combine State FIPS and County FIPS to get the 5-digit code.
data_health_ins_clean_fips <- data_health_ins_clean %>%
mutate(state_fips_clean = str_pad(data_health_ins_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_health_ins_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_health_ins_clean_fips
data_income_clean
data_poverty_clean_fips <- data_population_clean %>%
mutate(state_fips_clean  = str_pad(data_population_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_population_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_population_clean
data_health_ins_clean_fips <- data_health_ins_clean %>%
mutate(state_fips_clean  = str_pad(data_health_ins_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_health_ins_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_income_clean_fips <- data_income_clean %>%
mutate(state_fips_clean  = str_pad(data_income_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_income_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_population_clean_fips <- data_population_clean %>%
mutate(state_fips_clean  = str_pad(data_population_clean_fips$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_population_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_population_clean_fips <- data_population_clean %>%
mutate(state_fips_clean  = str_pad(data_population_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_population_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_population_clean
data_population_clean_fips <- data_population_clean %>%
mutate(state_fips_clean  = str_pad(data_population_clean$state, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_population_clean$county, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_poverty_clean_fips <- data_poverty_clean %>%
mutate(state_fips_clean  = str_pad(data_poverty_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_poverty_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
data_poverty_clean
view(data_poverty_clean_fips)
data_poverty_clean
data_poverty_clean_fips <- data_poverty_clean %>%
mutate(state_fips_clean  = str_pad(data_poverty_clean$state_fips, width = 2, pad = "0")) %>%
mutate(county_fips_clean = str_pad(data_poverty_clean$county_fips, width = 3, pad = "0")) %>%
mutate(fips_clean = paste(state_fips_clean, county_fips_clean, sep=""))
view(data_poverty_clean_fips)
# Check if there is duplicate FIPS
dim(data_death_clean_fips)[1] == length(unique(data_death_clean_fips$fips_clean)) # No duplicates
dim(data_incidence_clean_fips)[1] == length(unique(data_incidence_clean_fips$fips_clean)) # No duplicates
dim(data_health_ins_clean_fips)[1] == length(unique(data_health_ins_clean_fips$fips_clean)) # No duplicates
dim(data_income_clean_fips)[1] == length(unique(data_income_clean_fips$fips_clean)) # No duplicates
dim(data_population_clean_fips)[1] == length(unique(data_population_clean_fips$fips_clean)) # No duplicates
dim(data_poverty_clean_fips)[1] == length(unique(data_poverty_clean_fips$fips_clean)) # No duplicates
# Check if there is duplicate FIPS
dim(data_death_clean_fips)[1] == length(unique(data_death_clean_fips$fips_clean)) # No duplicates
dim(data_incidence_clean_fips)[1] == length(unique(data_incidence_clean_fips$fips_clean)) # No duplicates
dim(data_health_ins_clean_fips)[1] == length(unique(data_health_ins_clean_fips$fips_clean)) # No duplicates
dim(data_income_clean_fips)[1] == length(unique(data_income_clean_fips$fips_clean)) # No duplicates
dim(data_population_clean_fips)[1] == length(unique(data_population_clean_fips$fips_clean)) # No duplicates
dim(data_poverty_clean_fips)[1] == length(unique(data_poverty_clean_fips$fips_clean)) # No duplicates
dim(data_death_clean_fips)[1]
dim(data_incidence_clean_fips)[1]
dim(data_health_ins_clean_fips)[1]
dim(data_income_clean_fips)[1]
dim(data_population_clean_fips)[1]
dim(data_poverty_clean_fips)[1]
library(xlsx)
install.packages("xlsx")
library(xlsx)
library(xlsx)
library("xlsx")
library("stringr") # to add leading zeros
library(xlsx)
install.packages("xlsx")
library(xlsx)
knitr::opts_chunk$set(echo = TRUE)
#Installing libraries
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(janitor) # to clean column names
library(psych)   # for the describe function
library("stringr") # to add leading zeros
write.csv(data_poverty_clean_fips, abc, sheetName="Sheet1")
write.csv(data_poverty_clean_fips, abc, sheetName="Sheet1")
help(write.csv)
write.csv(data_poverty_clean_fips, "abc")
write_csv2(data_poverty_clean_fips, "abc")
help(write_csv2)
write_csv2(data_poverty_clean_fips, "abc.csv")
write_excel_csv(data_poverty_clean_fips, "abc.csv", col_names = TRUE)
write_excel_csv(data_population_clean_fips, "population_clean_fips.csv", col_names = TRUE)
data_population_clean_fips
class(data_poverty_clean_fips$fips_clean)
write_excel_csv2(data_population_clean_fips, "population_clean_fips.csv", col_names = TRUE)
write_excel_csv2(data_population_clean_fips, "population_clean_fips.csv", delim = ";", col_names = TRUE)
write_excel_csv(data_population_clean_fips, "population_clean_fips.csv", delim = ";", col_names = TRUE)
write_excel_csv(data_population_clean_fips, "population_clean_fips.csv", col_names = TRUE)
write_excel_csv(data_population_clean_fips, "population_clean_fips.xlsx", col_names = TRUE)
clear()
rm()
rm(list = ls())
