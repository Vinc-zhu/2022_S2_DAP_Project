geom_col(show.legend = F) +
theme_economist()
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
summary_incidence_by_state <- joined_data_all %>%
group_by(state) %>%
summarise(incidence_rate = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
summary_incidence_by_state <- joined_data_all %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
# Check Nevada Data
joined_data_all %>% filter(state_name == "Nevada")
miss_var_summary(joined_data_all)
# Check missing state
joined_data_all %>% filter(is.na(state_name))
# Check missing state
joined_data_all %>% filter(is.na(state))
View(data_death_clean_fips_with_state)
miss_var_summary(data_death_clean_fips_with_state)
miss_var_summary(data_death)
miss_var_summary(data_death_clean)
miss_var_summary(data_death_clean_fips)
miss_var_summary(data_death_clean_fips_with_state)
# Overview on missing values
miss_var_summary(joined_data_all)
# Overview on missing values
miss_var_summary(joined_data_all)
joined_data_all %>% filter(is.na(state))
is.na(state)
is.na(joined_data_all$age_adjusted_death_rate)
joined_data_all(is.na(joined_data_all$age_adjusted_death_rate))
joined_data_all[is.na(joined_data_all$age_adjusted_death_rate)]
joined_data_all[2]
joined_data_all[,2]
joined_data_all[2,]
joined_data_all[is.na(joined_data_all$age_adjusted_death_rate),]
joined_data_all[-is.na(joined_data_all$age_adjusted_death_rate),]
joined_data_all_y <- joined_data_all[-is.na(joined_data_all$age_adjusted_death_rate),]
joined_data_all
joined_data_all_y
joined_data_all[-is.na(joined_data_all$age_adjusted_death_rate),]
# Overview on missing values
miss_var_summary(joined_data_all)
-is.na(joined_data_all$age_adjusted_death_rate)
joined_data_all_y$age_adjusted_death_rate[-is.na(joined_data_all$age_adjusted_death_rate)]
joined_data_all_y$age_adjusted_death_rate[is.na(joined_data_all$age_adjusted_death_rate)]
# Check missing state
joined_data_all %>% filter(is.na(age_adjusted_death_rate))
joined_data_all_y <- joined_data_all %>% filter(!is.na(age_adjusted_death_rate))
joined_data_all_y
joined_data_all
miss_var_summary(joined_data_all_y)
# Overview on missing values
miss_var_summary(joined_data_all)
joined_data_all %>% filter(is.na(poverty_001))
joined_data_all_y %>% filter(is.na(poverty_001))
joined_data_all_y %>% filter(state == "US")
# Remove "US" entry as none of the social determinants datasets contain input for "US"
joined_data_all_y_no_us %>% filter(state != "US")
# Remove "US" entry as none of the social determinants datasets contain input for "US"
joined_data_all_y_no_us <- joined_data_all_y %>% filter(state != "US")
joined_data_all_y_no_us
joined_data_all_y
miss_var_summary(joined_data_all_y_no_us)
joined_data_all_with_NA <- joined_data_all %>% mutate(across(everything(), function(x){ifelse(x == "*" | x == ".", NA, x)}))
miss_var_summary(joined_data_all)
miss_var_summary(joined_data_all_with_NA)
joined_data_all_with_NA
joined_data_all_y
miss_var_summary(joined_data_all_y)
# Remove "US" entry as none of the social determinants datasets contain input for "US"
joined_data_all_y_no_us <- joined_data_all_y %>% filter(state != "US")
miss_var_summary(joined_data_all_y_no_us)
miss_var_summary(joined_data_all_y_no_us)
View(data_income_clean)
names(data_income_clean)
names(data_income_clean)[6:14]
# Since only income_001 is one of the explanatory variables, missing values in other income variables can be ignored.
# Hence those variables are entirely removed.
drop_cols <- c(names(data_income_clean)[6:14])
drop_cols
drop_cols <- c("income_h_001")
drop_cols <- c("income_h_001", "income_e_001")
class(drop_cols)
# Since only income_001 is one of the explanatory variables, missing values in other income variables can be ignored.
# Hence those variables are entirely removed.
drop_cols <- c(names(data_income_clean)[6:14])
class(drop_cols)
joined_data_all_y_no_us
joined_data_all_y_no_us %>% select(-one_of(drop_cols))
joined_data_all_y_no_us_income <- joined_data_all_y_no_us %>% select(-one_of(drop_cols))
miss_var_summary(joined_data_all_y_no_us_income)
joined_data_all %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000))
joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000))
view(joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000)))
miss_var_summary(joined_data_all_with_NA)
miss_var_summary(joined_data_all_y)
422-168
# Check on incidence missing values
joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000)))
# Check on incidence missing values
joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000))
# Check on incidence missing values
joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000)) %>% descirbe()
# Check on incidence missing values
joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000)) %>% describe()
joined_data_all_y_no_us_income
joined_data_all_y_no_us_income_test <- joined_data_all_y_no_us_income %>%
bind_shadow(only_miss = TRUE) %>% #naniar function
add_label_shadow() %>% #naniar function
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0) %>%
joined_data_all_y_no_us_income_test
# Replace those NA incidence rate and average_annual_count with 0
joined_data_all_y_no_us_income_test <- joined_data_all_y_no_us_income %>%
bind_shadow(only_miss = TRUE) %>% #naniar function
add_label_shadow() %>% #naniar function
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0) %>%
joined_data_all_y_no_us_income_test
# Replace those NA incidence rate and average_annual_count with 0
joined_data_all_y_no_us_income_test <- joined_data_all_y_no_us_income %>%
bind_shadow(only_miss = TRUE) %>% #naniar function
add_label_shadow() %>% #naniar function
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0)
library(simputation) # to replaces NAs
# Installing libraries
install.packages("simputation")
library(simputation) # to replaces NAs
library(naniar) # to check missing values
library(simputation) # to replaces NAs
knitr::opts_chunk$set(echo = TRUE)
# Installing libraries
# install.packages("simputation")
library(tidyverse)
library(readr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggthemes)
# theme_economist()
# theme_fivethirtyeight()
# theme_bw()
library(janitor) # to clean column names
library(psych)   # for the describe function
library("stringr") # to add leading zeros
library(naniar) # to check missing values
library(simputation) # to replaces NAs
joined_data_all_y_no_us_income_test <- joined_data_all_y_no_us_income %>%
bind_shadow(only_miss = TRUE) %>% #naniar function
add_label_shadow() %>% #naniar function
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0)
joined_data_all_y_no_us_income_test
joined_data_all_y_no_us_income
joined_data_all_y_no_us_income_test
# Replace those NA incidence rate and average_annual_count with 0
joined_data_all_final <- joined_data_all_y_no_us_income %>%
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0)
miss_var_summary(joined_data_all_final)
# Check Nevada Data
joined_data_all_final %>% filter(state_name == "Nevada")
# To ensure all the suppressed values "*" are shown as "NA"
joined_data_all_with_NA <- joined_data_all %>% mutate(across(everything(), function(x){ifelse(x == "*" | x == ".", NA, x)}))
# Overview on missing values
miss_var_summary(joined_data_all_with_NA)
# Response variable age_adjusted_death_rate: 331 rows have missing values.
# Remove those rows.
joined_data_all_y <- joined_data_all_with_NA %>% filter(!is.na(age_adjusted_death_rate))
miss_var_summary(joined_data_all_y)
# Remove "US" entry as none of the social determinants datasets contain input for "US"
joined_data_all_y_no_us <- joined_data_all_y %>% filter(state != "US")
miss_var_summary(joined_data_all_y_no_us)
# Since only income_001 is one of the explanatory variables, missing values in other income variables can be ignored.
# Hence those variables are entirely removed.
drop_cols <- c(names(data_income_clean)[6:14])
joined_data_all_y_no_us_income <- joined_data_all_y_no_us %>% select(-one_of(drop_cols))
miss_var_summary(joined_data_all_y_no_us_income)
# Check on incidence missing values
joined_data_all_y_no_us_income %>% filter(is.na(age_adjusted_incidence_rate_cases_per_100_000)) %>% describe()
# for these rows, "average_annual_count" is also missing or less than 5
# Replace those NA incidence rate and average_annual_count with 0
joined_data_all_final <- joined_data_all_y_no_us_income %>%
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0)
miss_var_summary(joined_data_all_final) # no more NAs
# Check Nevada Data
joined_data_all_final %>% filter(state_name == "Nevada")
# There are still 12 valid Nevada entries.
# [Uncertainty] According to Sam, Nevada data is not available. But some Nevada data are actually valid in the  datasets. Include them for further analysis at the moment, but will ask Sam for clarification.
# Total below poverty level per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_below_poverty_level_per_capita = poverty_002 / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_below_poverty_level_per_capita)
summary_below_poverty_level_per_capita_by_state <- joined_data_all %>%
group_by(state) %>%
summarise(below_poverty_level_per_capita = sum(poverty_002) / sum(popestimate2015) )
summary_below_poverty_level_per_capita_by_state %>%
ggplot(aes(state, below_poverty_level_per_capita, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
joined_data_all_final
# Total below poverty level per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_below_poverty_level_per_capita = poverty_002 / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_below_poverty_level_per_capita)
summary_below_poverty_level_per_capita_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(below_poverty_level_per_capita = sum(poverty_002) / sum(popestimate2015) )
summary_below_poverty_level_per_capita_by_state %>%
ggplot(aes(state, below_poverty_level_per_capita, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
# Total without health insurance
joined_data_all_final <- joined_data_all_final %>%
mutate(total_without_health_ins =
hi_005 + hi_008 + hi_011 + hi_014 + hi_017 + hi_020 + hi_023 + hi_026 + hi_029 +
hi_033 + hi_036 + hi_039 + hi_042 + hi_045 + hi_048 + hi_051 + hi_054 + hi_057)
# Total without health insurance per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_without_health_ins_per_capita = total_without_health_ins / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_without_health_ins_per_capita)
# joined_data_all %>% filter(total_without_health_ins_per_capita>=1) %>%
#   select(fips_clean, state, total_without_health_ins, total_without_health_ins_per_capita, popestimate2015)
#
# joined_data_all %>% filter(is.na(state)) %>%
#   select(fips_clean, state, total_without_health_ins, total_without_health_ins_per_capita, popestimate2015)
summary_without_health_ins_per_capita_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(without_health_ins_per_capita = sum(total_without_health_ins) / sum(popestimate2015) )
summary_without_health_ins_per_capita_by_state %>%
ggplot(aes(state, without_health_ins_per_capita, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
# Median income - income_001
# Check median income by State (assume the average income is similar to the median income)
summary_median_income_by_state <- joined_data_all %>%
group_by(state) %>%
summarise(median_income_by_state = sum(income_001*popestimate2015) / sum(popestimate2015) )
summary_median_income_by_state %>%
ggplot(aes(state, median_income_by_state, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
#================ NA in income_001 for one TX country
# a_test <- joined_data_all %>%
#   mutate(income_pop = income_001*popestimate2015)
#
#
# a_test %>% group_by(state) %>%
#   summarise(median_income_by_state = sum(income_pop) / sum(popestimate2015) ) %>%
#   ggplot(aes(state, median_income_by_state, fill = state), na.rm = T) +
#   geom_col(show.legend = F) +
#   theme_economist()
#
# a_test %>% filter(state == "TX") %>%
#     select(fips_clean, state, income_001, popestimate2015, income_pop)
#
# a_test %>% filter(is.na(income_001))
summary_median_income_by_state %>%
ggplot(aes(state, median_income_by_state, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
# Median income - income_001
# Check median income by State (assume the average income is similar to the median income)
summary_median_income_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(median_income_by_state = sum(income_001*popestimate2015) / sum(popestimate2015) )
summary_median_income_by_state %>%
ggplot(aes(state, median_income_by_state, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
#================ NA in income_001 for one TX country
# a_test <- joined_data_all_final %>%
#   mutate(income_pop = income_001*popestimate2015)
#
#
# a_test %>% group_by(state) %>%
#   summarise(median_income_by_state = sum(income_pop) / sum(popestimate2015) ) %>%
#   ggplot(aes(state, median_income_by_state, fill = state), na.rm = T) +
#   geom_col(show.legend = F) +
#   theme_economist()
#
# a_test %>% filter(state == "TX") %>%
#     select(fips_clean, state, income_001, popestimate2015, income_pop)
#
# a_test %>% filter(is.na(income_001))
# Incidence rate (Age-Adjusted Incidence Rate - cases per 100,000)
# [Uncertainty: only for aged 75 and above?]
# Check incidence rate by state
# joined_data_all_final %>%
#   mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
#   group_by(state) %>%
#   summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
summary_incidence_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
# Incidence rate (Age-Adjusted Incidence Rate - cases per 100,000)
# [Uncertainty: only for aged 75 and above?]
# Check incidence rate by state
# joined_data_all_final %>%
#   mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
#   group_by(state) %>%
#   summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
summary_incidence_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Incidence rate (Age-Adjusted Incidence Rate - cases per 100,000)
# [Uncertainty: only for aged 75 and above?]
# Check incidence rate by state
# joined_data_all_final %>%
#   mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
#   group_by(state) %>%
#   summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
summary_incidence_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state), na.rm = T) +
geom_col(show.legend = F) +
theme_economist()
# Incidence rate (Age-Adjusted Incidence Rate - cases per 100,000)
# [Uncertainty: only for aged 75 and above?]
# Check incidence rate by state
# joined_data_all_final %>%
#   mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
#   group_by(state) %>%
#   summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
summary_incidence_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Median income - income_001
# Check median income by State (assume the average income is similar to the median income)
summary_median_income_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(median_income_by_state = sum(income_001*popestimate2015) / sum(popestimate2015) )
summary_median_income_by_state %>%
ggplot(aes(state, median_income_by_state, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Total without health insurance
joined_data_all_final <- joined_data_all_final %>%
mutate(total_without_health_ins =
hi_005 + hi_008 + hi_011 + hi_014 + hi_017 + hi_020 + hi_023 + hi_026 + hi_029 +
hi_033 + hi_036 + hi_039 + hi_042 + hi_045 + hi_048 + hi_051 + hi_054 + hi_057)
# Total without health insurance per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_without_health_ins_per_capita = total_without_health_ins / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_without_health_ins_per_capita)
# joined_data_all %>% filter(total_without_health_ins_per_capita>=1) %>%
#   select(fips_clean, state, total_without_health_ins, total_without_health_ins_per_capita, popestimate2015)
#
# joined_data_all %>% filter(is.na(state)) %>%
#   select(fips_clean, state, total_without_health_ins, total_without_health_ins_per_capita, popestimate2015)
summary_without_health_ins_per_capita_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(without_health_ins_per_capita = sum(total_without_health_ins) / sum(popestimate2015) )
summary_without_health_ins_per_capita_by_state %>%
ggplot(aes(state, without_health_ins_per_capita, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Total below poverty level per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_below_poverty_level_per_capita = poverty_002 / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_below_poverty_level_per_capita)
summary_below_poverty_level_per_capita_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(below_poverty_level_per_capita = sum(poverty_002) / sum(popestimate2015) )
summary_below_poverty_level_per_capita_by_state %>%
ggplot(aes(state, below_poverty_level_per_capita, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
summary_incidence_by_state
joined_data_all_final %>%
mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
group_by(state) %>%
summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
joined_data_all_final %>% filter(state == "KS")
joined_data_all_final %>% filter(state %in% c("KS", "MN", "NV")
joined_data_all_final %>% filter(state %in% c("KS", "MN", "NV"))
joined_data_all_final %>% filter(state %in% c("KS", "MN", "NV"))
joined_data_all_final %>%
mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
group_by(state) %>%
summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
summary_incidence_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Check Nevada Data
joined_data_all_final %>% filter(state == "NV")
joined_data_all_final %>% filter(state %in% c("KS", "MN", "NV"))
data_death_state4 %>% filter(state_name == "Nevada")
data_incidence_clean2 %>% filter(state_name == "Nevada")
data_incidence_clean2 %>% filter(grepl('Nevada', state_name))
data_incidence_clean2 %>% dplyr::filter(grepl('Nevada', state_name))
data_incidence_clean2
data_incidence_clean2 %>% dplyr::filter(grepl('Nevada', county))
data_incidence_clean2 %>% filter(grepl('Nevada', county))
data_incidence_clean2 %>% filter(grepl('Minnesota', county))
# Remove Nevada Data
joined_data_all_y_no_us_income_no_nevada <- joined_data_all_y_no_us_income %>% filter(state_name != "Nevada")
# Replace those NA incidence rate and average_annual_count with 0
joined_data_all_final <- joined_data_all_y_no_us_income_no_nevada %>%
impute_const(age_adjusted_incidence_rate_cases_per_100_000~0) %>%
impute_const(average_annual_count~0)
miss_var_summary(joined_data_all_final) # no more NAs
# Total below poverty level per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_below_poverty_level_per_capita = poverty_002 / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_below_poverty_level_per_capita)
summary_below_poverty_level_per_capita_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(below_poverty_level_per_capita = sum(poverty_002) / sum(popestimate2015) )
summary_below_poverty_level_per_capita_by_state %>%
ggplot(aes(state, below_poverty_level_per_capita, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Total without health insurance
joined_data_all_final <- joined_data_all_final %>%
mutate(total_without_health_ins =
hi_005 + hi_008 + hi_011 + hi_014 + hi_017 + hi_020 + hi_023 + hi_026 + hi_029 +
hi_033 + hi_036 + hi_039 + hi_042 + hi_045 + hi_048 + hi_051 + hi_054 + hi_057)
# Total without health insurance per capita
joined_data_all_final <- joined_data_all_final %>% mutate(total_without_health_ins_per_capita = total_without_health_ins / popestimate2015)
# Check min, max
describe(joined_data_all_final$total_without_health_ins_per_capita)
# joined_data_all %>% filter(total_without_health_ins_per_capita>=1) %>%
#   select(fips_clean, state, total_without_health_ins, total_without_health_ins_per_capita, popestimate2015)
#
# joined_data_all %>% filter(is.na(state)) %>%
#   select(fips_clean, state, total_without_health_ins, total_without_health_ins_per_capita, popestimate2015)
summary_without_health_ins_per_capita_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(without_health_ins_per_capita = sum(total_without_health_ins) / sum(popestimate2015) )
summary_without_health_ins_per_capita_by_state %>%
ggplot(aes(state, without_health_ins_per_capita, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Median income - income_001
# Check median income by State (assume the average income is similar to the median income)
summary_median_income_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(median_income_by_state = sum(income_001*popestimate2015) / sum(popestimate2015) )
summary_median_income_by_state %>%
ggplot(aes(state, median_income_by_state, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
# Incidence rate (Age-Adjusted Incidence Rate - cases per 100,000)
# [Uncertainty: only for aged 75 and above?]
# Check incidence rate by state
joined_data_all_final %>%
mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
group_by(state) %>%
summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
joined_data_all_final %>% filter(state %in% c("KS", "MN", "NV"))
summary_incidence_by_state <- joined_data_all_final %>%
group_by(state) %>%
summarise(incidence_rate_per_100000 = sum(age_adjusted_incidence_rate_cases_per_100_000 * popestimate2015) / sum(popestimate2015) )
summary_incidence_by_state %>%
ggplot(aes(state, incidence_rate_per_100000, fill = state)) +
geom_col(show.legend = F) +
theme_economist()
joined_data_all_final %>% filter(state %in% c("KS", "MN"))
joined_data_all_final %>% filter(state %in% c("KS", "MN")) %>% describe()
joined_data_all_final %>%
mutate(check = average_annual_count / popestimate2015 * 100000 - age_adjusted_incidence_rate_cases_per_100_000) %>%
group_by(state) %>%
summarise(sum(check), sum(average_annual_count), sum(age_adjusted_incidence_rate_cases_per_100_000), sum(popestimate2015) )
joined_data_all_final
# Zero for KS and MN, check
joined_data_all_final %>% filter(state %in% c("KS", "MN")) %>% describe() # Incidence data is missing for KS and MN
joined_data_all_final %>% filter(state !%in% c("KS", "MN"))
joined_data_all_final %>% filter(state %in% -c("KS", "MN"))
joined_data_all_final %>% filter(state %!in% c("KS", "MN"))
joined_data_all_final %>% filter(state %nin% c("KS", "MN"))
joined_data_all_final %>% filter(!state %in% c("KS", "MN"))
joined_data_all_final <- joined_data_all_final %>% filter(!state %in% c("KS", "MN"))
# Zero for KS and MN, check
joined_data_all_final %>% filter(state %in% c("KS", "MN")) %>% describe() # Incidence data is missing for KS and MN
# Zero for KS and MN, check
joined_data_all_final %>% filter(state %in% c("KS", "MN")) %>% describe() # Incidence data is missing for KS and MN
joined_data_all_final
# Zero for KS and MN, check
joined_data_all_final %>% filter(state %in% c("KS", "MN")) %>% describe() # Incidence data is missing for KS and MN
joined_data_all_final %>% filter(state %in% c("KS", "MN"))
